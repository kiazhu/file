git    
	-u: 指定Manifest库的Git访问路径。 
    -m: 指定要使用的Manifest文件。 
    -b: 指定要使用Manifest仓库中的某个特定分支。 
    –repo-url: 指定要检查repo是否有更新的远端repoGit库的访问路径。 
    –no-repo-verify: 指定不检查repo库是否需要更新。
    git 合并特定分支，http://blog.csdn.net/ybdesire/article/details/42145597
    git cherry-pick 62ecb3
    git checkout -b newbranch 62ecb3
    git rebase --onto master 76cada
    拉取指定的分支
    git checkout -b 本地分支名 origin/远程分支名

    git blame [file_name] 
    这个命令可以将文件中的每一行的作者、最新的变更提交和提交时间展示出来。

    git log --oneline
    git log --graph
    git log --all

    假设你不小心提交了些你不想要的东西，不得不做一次强制重置来恢复到之前的状态。然后，你意识到在这一过程中你丢失了其它一些信息并且想要把它们找回来，或者至少瞅一眼。这正是git reflog可以做到的。
    git reflog

    git stage

    git diff filename > *.patch
    git apply patch

    git 合并
    默认合并策略可以带有参数，其中的几个正好是关于忽略空白改动的。 如果你看到在一次合并中有大量
	的空白问题，你可以简单地中止它并重做一次，这次使用 -Xignore-all-space 或 -Xignore-space-change 
	选项。 第一个选项忽略任意 数量 的已有空白的修改，第二个选项忽略所有空白修改。

    git merge -Xignore-space-change whitespace
    因为在本例中，实际上文件修改并没有冲突，一旦我们忽略空白修改，每一行都能被很好地合并。

    使用 git log --stat 命令来查看简化版的 diff 日志信息，
    git log/show --stat

	repo forall -p -c 


	=============git push=================
	https://www.yiibai.com/git/git_push.html
    git push --set-upstream origin 分支名
    推送分支到远程仓库

	git push origin project:master
	将本地的project分支推送到origin主机的master分支,如果master不存在,则会被新建

	如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。
	$ git push origin :master
	# 等同于
	$ git push origin --delete master
	上面命令表示删除origin主机的master分支。如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。

	=============打标签方法=================
	https://blog.csdn.net/albertsh/article/details/63253614


driver:
	lcd:
		1.screen接口类型，6、8/10位屏，数据格式
		2.单6、双6、单8、双8、单10、双10识别
		3.
	phy 
	wifi
	rtc
	usb
	codec
		

	元器件表示方法：
	电容:C 电阻:R 电感:L 二极管(LED): D 变压器:T 功率管:Q 芯片:U 接口:J 晶振:Y 保险:F

	AM1805
	RK1000
	HDMI
	ITE66121
	LCD
	TOUCHPAD
	USB
	SPDIF
	SPI_LCD
	RTL8201F
	CLK
	TOUCHKEY
	
	
	git push ubt144  HEAD:refs/for/master%r=steven@geniatech.com,r=steven@geniatech.com
	git push ubt144  HEAD:refs/for/127_TV_GDS_t962x%r=steven@geniatech.com,r=steven@geniatech.com

	export PATH=/opt/openjdk-1.xxx/bin:$PATH

	git 出现 error Missing tree 的处理办法
	git push --no-thin review HEAD:refs/for/master  

	关键点是 --no-thin 选项. stackoverflow 上的那位答主这么解释的:
	默认情况下 git push 会在向服务器推送时进行优化,以将所发送的包降低到最小. 做法是发送时忽略本地仓库和远端仓库中共有的部分. 即 git push 默认是采用 --thin 选项的.
	发生本文中出现的问题,貌似是因为某个 git 对象和服务器不一致了.
	这时加上 --no-thin 参数,把该传的都传过去,问题就解决了.


	gitdir=$(git rev-parse --git-dir); scp -p -P 29418 zkh@review.geniatech.com:hooks/commit-msg ${gitdir}/hooks/
	git commit --amend

	驱动读取文件：
	https://blog.csdn.net/songyulong8888/article/details/72473748
	http://blog.chinaunix.net/uid-13059007-id-5766941.html

	对/sys/class目录文件读写
	https://ask.csdn.net/questions/163480

